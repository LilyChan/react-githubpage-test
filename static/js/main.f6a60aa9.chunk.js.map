{"version":3,"sources":["table.js","form.js","app.js","index.js"],"names":["TableHeader","TableBody","props","characterData","map","c","i","key","name","job","onClick","removeCharacter","Table","this","border","Component","Form","initState","state","handleChange","event","target","value","setState","submitForm","preventDefault","console","log","handleSubmit","initialState","htmlFor","type","id","onChange","App","characters","index","filter","className","React","ReactDOM","render","document","getElementById"],"mappings":"kOAEMA,EAAc,WAChB,OACI,+BACI,4BACI,oCACA,mCACA,yCAMVC,EAAY,SAACC,GACf,OACI,+BACKA,EAAMC,cAAcC,KAAK,SAACC,EAAEC,GACzB,OACI,wBAAIC,IAAKD,GACL,4BAAKD,EAAEG,MACP,4BAAKH,EAAEI,KACP,4BACI,4BAAQC,QAAU,kBAAKR,EAAMS,gBAAgBL,KAA7C,iBAuBbM,E,uKAbF,IAAD,EAEqCC,KAAKX,MAAvCC,EAFH,EAEGA,cAAeQ,EAFlB,EAEkBA,gBAEtB,OACI,2BAAOG,OAAO,KACV,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWX,cAAeA,EAAeQ,gBAAiBA,S,GARtDI,a,OC9BCC,E,4MACjBC,UAAY,CACRT,KAAK,GACLC,IAAI,I,EAGRS,MAAQ,EAAKD,U,EAEbE,aAAe,SAACC,GAAW,IAAD,EACEA,EAAMC,OAAtBb,EADc,EACdA,KAAMc,EADQ,EACRA,MAEd,EAAKC,SAAL,eACKf,EAAOc,K,EAIhBE,WAAa,SAACJ,GACVA,EAAMK,iBACNC,QAAQC,IAAI,mDAAoD,EAAKT,OACrE,EAAKhB,MAAM0B,aAAa,EAAKV,OAC7B,EAAKK,SAAS,EAAKM,e,uDAGd,IAAD,EACgBhB,KAAKK,MAAlBV,EADH,EACGA,KAAMC,EADT,EACSA,IAEb,OACI,8BACI,2BAAOqB,QAAQ,QAAf,UACA,2BACIC,KAAO,OACPvB,KAAO,OACPwB,GAAK,OACLV,MAASd,EACTyB,SAAapB,KAAKM,eAEtB,2BAAOW,QAAQ,OAAf,SACA,2BACIC,KAAO,OACPvB,KAAO,MACPwB,GAAK,MACLV,MAASb,EACTwB,SAAapB,KAAKM,eAEtB,4BAAQY,KAAK,SAASrB,QAAUG,KAAKW,YAArC,e,GA5CkBT,aCsCnBmB,E,4MAlCbhB,MAAQ,CACNiB,WAAY,I,EAIdxB,gBAAkB,SAACyB,GACjB,EAAKb,SAAS,CACZY,WAAY,EAAKjB,MAAMiB,WAAWE,QAAO,SAAChC,EAAGC,GAC3C,OAAOA,IAAM8B,Q,EAKnBR,aAAe,SAACO,GACdT,QAAQC,IAAI,0CAA2CQ,GACvD,EAAKZ,SAAU,CAACY,WAAW,GAAD,mBAAO,EAAKjB,MAAMiB,YAAlB,CAA8BA,O,uDAGjD,IACCA,EAAetB,KAAKK,MAApBiB,WAER,OACE,yBAAKG,UAAU,OACb,+CACA,yBAAKA,UAAU,aACb,kBAAC,EAAD,CAAMV,aAAgBf,KAAKe,eAC3B,6BACA,kBAAC,EAAD,CAAOzB,cAAegC,EAAYxB,gBAAiBE,KAAKF,wB,GA7BhD4B,IAAMxB,WCCxByB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.f6a60aa9.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nconst TableHeader = () => {\n    return (\n        <thead>\n            <tr>\n                <th>Name</th>\n                <th>Job</th>\n                <th>Action</th>\n            </tr>\n        </thead>\n    )\n};\n\nconst TableBody = (props) => {\n    return (\n        <tbody>\n            {props.characterData.map( (c,i) => {\n                return (\n                    <tr key={i}>\n                        <td>{c.name}</td>\n                        <td>{c.job}</td>\n                        <td>\n                            <button onClick={ ()=> props.removeCharacter(i)}>Delete</button>\n                        </td>\n                    </tr>\n                )\n            })}\n        </tbody>\n    )\n};\n\nclass Table extends Component{\n    render(){\n\n        const {characterData, removeCharacter} = this.props;\n\n        return (\n            <table border='1'>\n                <TableHeader />\n                <TableBody characterData={characterData} removeCharacter={removeCharacter}/>\n            </table>\n        )\n    }\n}\n\nexport default Table;","import React, {Component} from 'react';\n\nexport default class Form extends Component{\n    initState = {\n        name:'',\n        job:''\n    }\n\n    state = this.initState;\n\n    handleChange = (event) => {\n        const { name, value } = event.target;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    submitForm = (event) => {\n        event.preventDefault();\n        console.log('in from submit for, should call set parent state', this.state);\n        this.props.handleSubmit(this.state);\n        this.setState(this.initialState);\n    }\n\n    render(){\n        const {name, job} = this.state;\n\n        return (\n            <form>\n                <label htmlFor=\"name\"> Name </label>\n                <input \n                    type = 'text'\n                    name = 'name'\n                    id = 'name'\n                    value = {name}\n                    onChange = { this.handleChange }\n                />\n                <label htmlFor='job'> Job </label>\n                <input \n                    type = 'text'\n                    name = 'job'\n                    id = 'job'\n                    value = {job}\n                    onChange = { this.handleChange }\n                />\n                <button type='submit' onClick={ this.submitForm }>Submit</button>\n            </form>\n        )\n    }\n}","import React from 'react';\nimport Table from './table';\nimport Form from './form';\n\nclass App extends React.Component{\n\n  state = {\n    characters: [\n    ]\n  }\n\n  removeCharacter = (index) => {\n    this.setState({\n      characters: this.state.characters.filter((c, i) => {\n        return i !== index\n      }),\n    })\n  }\n\n  handleSubmit = (characters) => {\n    console.log('in app, handle submit, should set state', characters);\n    this.setState( {characters: [ ...this.state.characters, characters] });\n  }\n\n  render(){\n    const { characters } = this.state;\n\n    return (\n      <div className='App'>\n        <h1> Hello React!!!</h1>\n        <div className=\"container\">\n          <Form handleSubmit = {this.handleSubmit}/>\n          <br />\n          <Table characterData={characters} removeCharacter={this.removeCharacter}/>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}